defaults:
  - _self_
  - hydra: default
  - paths: default
  - trainer: default

task_name: vae
seed: 594461

base:
  sampling_rate: 48000
  num_mels: 128
  hidden_size: 192
  n_fft: 2048
  hop_length: 480
  win_length: 2048

data:
  _target_: fish_vocoder.data.datamodules.naive.NaiveDataModule
  batch_size: 16
  val_batch_size: 2
  num_workers: 2

  collate_fn:
    _target_: fish_vocoder.data.datasets.vae.collate_fn
    _partial_: true

  datasets:
    train:
      _target_: fish_vocoder.data.datasets.vae.VAEDataset
      root: dataset/train
      transform:
        _target_: torch.nn.Sequential
        _args_:
          - _target_: fish_vocoder.data.transforms.hq_pitch_shift.RandomHQPitchShift
            probability: 1
            sampling_rate: ${base.sampling_rate}
          - _target_: fish_vocoder.data.transforms.loudness.RandomLoudness
            probability: 0.9
            loudness_range: [0.1, 0.9]
          - _target_: fish_vocoder.data.transforms.crop.RandomCrop
            probability: 1
            crop_length: "${eval: '${base.hop_length} * 25'}"

    val:
      _target_: fish_vocoder.data.datasets.vae.VAEDataset
      root: dataset/valid
      transform:
        _target_: torch.nn.Sequential
        _args_:
          - _target_: fish_vocoder.data.transforms.crop.RandomCrop
            probability: 1
            crop_length: "${eval: '${base.hop_length} * 1000'}"

model:
  _target_: torch.nn.ModuleDict
  modules:
    viz_mel_transform:
      _target_: fish_vocoder.data.transforms.spectrogram.LogMelSpectrogram
      n_fft: ${base.n_fft}
      hop_length: ${base.hop_length}
      win_length: ${base.win_length}
      sample_rate: ${base.sampling_rate}
      n_mels: ${base.num_mels}
      f_min: 40
      f_max: 16000

    spectrogram_transform:
      _target_: fish_vocoder.data.transforms.spectrogram.LinearSpectrogram
      n_fft: ${base.n_fft}
      hop_length: ${base.hop_length}
      win_length: ${base.win_length}
    
    multi_scale_mel_transforms:
      _target_: torch.nn.ModuleList
      modules:
        - _target_: fish_vocoder.data.transforms.spectrogram.LogMelSpectrogram
          n_fft: ${base.n_fft}
          hop_length: ${base.hop_length}
          win_length: ${base.win_length}
          sample_rate: ${base.sampling_rate}
          n_mels: ${base.num_mels}
        - _target_: fish_vocoder.data.transforms.spectrogram.LogMelSpectrogram
          n_fft: 2048
          hop_length: 270
          win_length: 1080
          sample_rate: ${base.sampling_rate}
          n_mels: ${base.num_mels}
        - _target_: fish_vocoder.data.transforms.spectrogram.LogMelSpectrogram
          n_fft: 4096
          hop_length: 540
          win_length: 2160
          sample_rate: ${base.sampling_rate}
          n_mels: ${base.num_mels}
    
    generator:
      _target_: fish_vocoder.modules.generators.hifigan.HiFiGANGenerator
      hop_length: ${base.hop_length}
      upsample_rates: [10, 6, 2, 2, 2]
      upsample_kernel_sizes: [16, 16, 4, 4, 4]
      resblock_kernel_sizes: [3, 7, 11]
      resblock_dilation_sizes: [[1, 3, 5], [1, 3, 5], [1, 3, 5]]
      leaky_relu_slope: 0.2
      num_mels: ${base.hidden_size}
      upsample_initial_channel: 512
      use_template: false
    
    posterior_encoder:
      _target_: fish_vocoder.modules.encoders.posterior_encoder.PosteriorEncoder
      # The input is a linear spectrogram
      in_channels: "${eval: '${base.n_fft} // 2 + 1'}"
      out_channels: ${base.hidden_size}
      hidden_channels: ${base.hidden_size}

    mpd:
      _target_: fish_vocoder.modules.discriminators.mpd.MultiPeriodDiscriminator
      periods: [3, 5, 7, 11, 17, 23, 37]
    
    mrd:
      _target_: fish_vocoder.modules.discriminators.mrd.MultiResolutionDiscriminator
      resolutions:
        - [1024, 120, 600]
        - [2048, 240, 1200]
        - [512, 50, 240]

optimizer:
  _target_: torch.optim.AdamW
  _partial_: true
  lr: 1e-4
  betas: [0.8, 0.99]
  eps: 1e-6

lr_scheduler:
  _target_: torch.optim.lr_scheduler.ExponentialLR
  _partial_: true
  gamma: 0.999

loop:
  log_interval: 50
  val_interval: 5000
  save_interval: 5000
  max_steps: 1000000
